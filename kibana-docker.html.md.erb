---
title: Kibana Docker
owner: Services
---

<strong><%= modified_date %></strong>

## <a id='overview'></a> Overview

With Docker you can easily push Kibana as an App to manage your ElasticSearch instance.

## <a id='step-by-step-guide'></a> Kibana in Cloud Foundry with Docker

This describes how to deploy your Kibana instance as a Docker container in Cloud Foundry.

### <a id='prerequisites'></a> Prerequisites

Before you can set up Kibana, you need an Elasticsearch-service.
- [ElasticSearch](./elasticsearch.html)

### <a id='push-logstash-buildpack'></a> Create the manifest.yml
Create the following manifest.yml to configure your Kibana.

```txt
applications:
  - name: mykibana
    memory: 2G
    disk_quota: 2G
    instances: 1
    routes:
      - route: mykibana.scapp.io
    services:
        - my-elasticsearch
    docker:
      image: docker.elastic.co/kibana/kibana:7.3.1
    command: |
      export ELASTICSEARCH_HOSTS=$(echo $VCAP_SERVICES | grep -Po '"host":\s"\K(.*?)(?=")') &&
      export ELASTICSEARCH_USERNAME=$(echo $VCAP_SERVICES | grep -Po '"full_access_username":\s"\K(.*?)(?=")') &&
      export ELASTICSEARCH_PASSWORD=$(echo $VCAP_SERVICES | grep -Po '"full_access_password":\s"\K(.*?)(?=")') &&
      /usr/local/bin/dumb-init -- /usr/local/bin/kibana-docker
```

Use ELASTICSEARCH_URL for version 6.x of Kibana.

Push the Docker container as usual with `cf push` and access it via https://mykibana.scapp.io using the full-access-user.
